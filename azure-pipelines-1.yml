# From here: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables

variables:
 GLOBAL_MYSECRET: $(mySecret) # this will not work because the secret variable needs to be mapped as env
 GLOBAL_MY_MAPPED_ENV_VAR: $(nonSecretVariable) # this works because it's not a secret.
 GLOBAL_MYSECRET_UNSET: $(mySecretUnset) # Testing
 GLOBAL_MY_MAPPED_ENV_VAR_UNSET: $(nonSecretVariableUnset) # 


steps:

- bash: |
    echo "Using an input-macro works: $(mySecret)"

    echo "Using the env var directly does not work: $MYSECRET"

    echo "Using a global secret var mapped in the pipeline does not work either: $GLOBAL_MYSECRET"

    echo "Using a global non-secret var mapped in the pipeline works: $GLOBAL_MY_MAPPED_ENV_VAR" 

    echo "Using the mapped env var for this task works and is recommended: $MY_MAPPED_ENV_VAR"

  env:
    MY_MAPPED_ENV_VAR: $(mySecret) # the recommended way to map to an env variable

- bash: |
    echo "Using an input-macro works: $(mySecretUnset)"

    echo "Using the env var directly does not work: $MYSECRET"

    echo "Using a global secret var mapped in the pipeline does not work either: $GLOBAL_MYSECRET_UNSET"

    echo "Using a global non-secret var mapped in the pipeline works: $GLOBAL_MY_MAPPED_ENV_VAR_UNSET" 

    echo "Using the mapped env var for this task works and is recommended: $MY_MAPPED_ENV_VAR"

  env:
    MY_MAPPED_ENV_VAR: $(mySecretUnset) # the recommended way to map to an env variable
